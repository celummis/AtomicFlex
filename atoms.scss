// _atoms.scss

// Color Variables (use lighten, darken or mix to change color)
$primary: #1A7EAD;
$secondary: #AD8B1A;
$accent: #3A1AAD;
$grayscale: #636363;
$white: #FFFFFF;
$black: #1A1A1A;
$alarm: #AD1A2D;
$warning: #E39B35;
$success: #17A63A;

// Spacing based on 8px grid
$xs: 4px;
$sm: 8px;
$md: 16px;
$lg: 32px;
$xlg: 64px;

// grid column size
$c-1: 8.33%;
$c-2: 16.66%;
$c-3: 25%;
$c-4: 33.33%;
$c-5: 41.66%;
$c-6: 50%;
$c-7: 58.33%;
$c-8: 66.66%;
$c-9: 75%;
$c-10: 83.33%;
$c-11: 91.66%;
$c-12: 100%;

// generic size
$w-10: 10%;
$w-15: 15%;
$w-20: 20%;
$w-25: 25%;
$w-30: 30%;
$w-35: 35%;
$w-40: 40%;
$w-45: 45%;
$w-50: 50%;
$w-55: 55%;
$w-60: 60%;
$w-65: 65%;
$w-70: 70%;
$w-75: 75%;
$w-80: 80%;
$w-85: 85%;
$w-90: 90%;
$w-95: 95%;
$w-100: 100%;

//border sizes
$b-xs: 1px;
$b-sm: 2px;
$b-md: 3px;
$b-lg: 4px;
$b-xlg: 5px;

// border radius 
$r-xs: 4px;
$r-sm: 8px;
$r-md: 16px;
$r-lg: 32px;
$r-xlg: 64px;

// Typography size mixin
@mixin font-size($size) {
  font-size: calculate-font($size);
}

// Typography style mixin
@mixin text($type: null) {
  @if $type==primary {
    color: $primary;
  }
  @if $type==secondary {
    color: $secondary;
  }
  @if $type==accent {
    color: $accent;
  }
  @if $type==bold {
    font-weight: bold;
  }
  @if $type==italic {
    font-style: italic;
  }
  @if $type==upper {
    text-transform: uppercase;
  }
  @if $type==capital {
    text-transform: capitalize;
  }
  @if $type==underline {
    text-decoration: underline;
  }
  @if $type==center {
    text-align: center;
  }
  @if $type==left {
    text-align: left;
  }
  @if $type==right {
    text-align: right;
  }
}

// spacing mixin
@mixin spacing($type: null) {
  //margin
  @if $type==m-0 {
    margin: 0;
  }
  @if $type==m-1 {
    margin: $xs;
  }
  @if $type==m-2 {
    margin: $sm;
  }
  @if $type==m-3 {
    margin: $md;
  }
  @if $type==m-4 {
    margin: $lg;
  }
  @if $type==m-5 {
    margin: $xlg;
  }
  @if $type==mt-0 {
    margin-top: 0;
  }
  @if $type==mt-1 {
    margin-top: $xs;
  }
  @if $type==mt-2 {
    margin-top: $sm;
  }
  @if $type==mt-3 {
    margin-top: $md;
  }
  @if $type==mt-4 {
    margin-top: $lg;
  }
  @if $type==mt-5 {
    margin-top: $xlg;
  }
  @if $type==mb-0 {
    margin-bottom: 0;
  }
  @if $type==mb-1 {
    margin-bottom: $xs;
  }
  @if $type==mb-2 {
    margin-bottom: $sm;
  }
  @if $type==mb-3 {
    margin-bottom: $md;
  }
  @if $type==mb-4 {
    margin-bottom: $lg;
  }
  @if $type==mb-5 {
    margin-bottom: $xlg;
  }
  @if $type==ml-0 {
    margin-left: 0;
  }
  @if $type==ml-1 {
    margin-left: $xs;
  }
  @if $type==ml-2 {
    margin-left: $sm;
  }
  @if $type==ml-3 {
    margin-left: $md;
  }
  @if $type==ml-4 {
    margin-left: $lg;
  }
  @if $type==ml-5 {
    margin-left: $xlg;
  }
  @if $type==mr-0 {
    margin-right: 0;
  }
  @if $type==mr-1 {
    margin-right: $xs;
  }
  @if $type==mr-2 {
    margin-right: $sm;
  }
  @if $type==mr-3 {
    margin-right: $md;
  }
  @if $type==mr-4 {
    margin-right: $lg;
  }
  @if $type==mr-5 {
    margin-right: $xlg;
  }
  @if $type==mx-0 {
    margin-left: 0;
    margin-right: 0;
  }
  @if $type==mx-1 {
    margin-left: $xs;
    margin-right: $xs;
  }
  @if $type==mx-2 {
    margin-left: $sm;
    margin-right: $sm;
  }
  @if $type==mx-3 {
    margin-left: $md;
    margin-right: $md;
  }
  @if $type==mx-4 {
    margin-left: $lg;
    margin-right: $lg;
  }
  @if $type==mx-5 {
    margin-left: $xlg;
    margin-right: $xlg;
  }
  @if $type==my-0 {
    margin-top: 0;
    margin-bottom: 0;
  }
  @if $type==my-1 {
    margin-top: $xs;
    margin-bottom: $xs;
  }
  @if $type==my-2 {
    margin-top: $sm;
    margin-bottom: $sm;
  }
  @if $type==my-3 {
    margin-top: $md;
    margin-bottom: $md;
  }
  @if $type==my-4 {
    margin-top: $lg;
    margin-bottom: $lg;
  }
  @if $type==my-5 {
    margin-top: $xlg;
    margin-bottom: $xlg;
  }
  //padding
  @if $type==p-0 {
    padding-top: 0;
  }
  @if $type==p-1 {
    padding: $xs;
  }
  @if $type==p-2 {
    padding: $sm;
  }
  @if $type==p-3 {
    padding: $md;
  }
  @if $type==p-4 {
    padding: $lg;
  }
  @if $type==p-5 {
    padding: $xlg;
  }
  @if $type==pt-0 {
    padding-top: 0;
  }
  @if $type==pt-1 {
    padding-top: $xs;
  }
  @if $type==pt-2 {
    padding-top: $sm;
  }
  @if $type==pt-3 {
    padding-top: $md;
  }
  @if $type==pt-4 {
    padding-top: $lg;
  }
  @if $type==pt-5 {
    padding-top: $xlg;
  }
  @if $type==pb-0 {
    padding-bottom: 0;
  }
  @if $type==pb-1 {
    padding-bottom: $xs;
  }
  @if $type==pb-2 {
    padding-bottom: $sm;
  }
  @if $type==pb-3 {
    padding-bottom: $md;
  }
  @if $type==pb-4 {
    padding-bottom: $lg;
  }
  @if $type==pb-5 {
    padding-bottom: $xlg;
  }
  @if $type==pl-0 {
    padding-left: 0;
  }
  @if $type==pl-1 {
    padding-left: $xs;
  }
  @if $type==pl-2 {
    padding-left: $sm;
  }
  @if $type==pl-3 {
    padding-left: $md;
  }
  @if $type==pl-4 {
    padding-left: $lg;
  }
  @if $type==pl-5 {
    padding-left: $xlg;
  }
  @if $type==pr-0 {
    padding-right: 0;
  }
  @if $type==pr-1 {
    padding-right: $xs;
  }
  @if $type==pr-2 {
    padding-right: $sm;
  }
  @if $type==pr-3 {
    padding-right: $md;
  }
  @if $type==pr-4 {
    padding-right: $lg;
  }
  @if $type==pr-5 {
    padding-right: $xlg;
  }
  @if $type==px-0 {
    padding-left: 0;
    padding-right: 0;
  }
  @if $type==px-1 {
    padding-left: $xs;
    padding-right: $xs;
  }
  @if $type==px-2 {
    padding-left: $sm;
    padding-right: $sm;
  }
  @if $type==px-3 {
    padding-left: $md;
    padding-right: $md;
  }
  @if $type==px-4 {
    padding-left: $lg;
    padding-right: $lg;
  }
  @if $type==px-5 {
    padding-left: $xlg;
    padding-right: $xlg;
  }
  @if $type==py-0 {
    padding-top: 0;
    padding-bottom: 0;
  }
  @if $type==py-1 {
    padding-top: $xs;
    padding-bottom: $xs;
  }
  @if $type==py-2 {
    padding-top: $sm;
    padding-bottom: $sm;
  }
  @if $type==py-3 {
    padding-top: $md;
    padding-bottom: $md;
  }
  @if $type==py-4 {
    padding-top: $lg;
    padding-bottom: $lg;
  }
  @if $type==py-5 {
    padding-top: $xlg;
    padding-bottom: $xlg;
  }
}

// flexbox grid container defaults (row, nowrap, justify-start, items-stretch, content-start)
// Use additional $type options to change container defaults 
@mixin flex($type: null) {
  @if $type==row {
    display: flex;
  }
  @if $type==row-reverse {
    display: flex;
    flex-direction: row-reverse;
  }
  @if $type==column {
    display: flex;
    flex-direction: column;
  }
  @if $type==column-reverse {
    display: flex;
    flex-direction: column-reverse;
  }
  @if $type==wrap {
    flex-wrap: wrap;
  }
  @if $type==wrap-reverse {
    flex-wrap: wrap-reverse;
  }
  @if $type==wrap-reverse {
    flex-wrap: wrap-reverse;
  }
  @if $type==justify-end {
    justify-content: flex-end;
  }
  @if $type==justify-center {
    justify-content: center;
  }
  @if $type==justify-between {
    justify-content: space-between;
  }
  @if $type==justify-around {
    justify-content: space-around;
  }
  @if $type==items-start {
    align-items: flex-start;
  }
  @if $type==items-end {
    align-items: flex-end;
  }
  @if $type==items-center {
    align-items: center;
  }
  @if $type==content-end {
    align-content: flex-end;
  }
  @if $type==content-end {
    align-content: flex-end;
  }
  @if $type==content-center {
    align-content: center;
  }
  @if $type==content-between {
    align-content: space-between;
  }
  @if $type==content-around {
    align-content: space-around;
  }
}

// flexbox column grid uses defaults the variable is Column Size
@mixin columns($size: null) {
  order: 0;
  flex: 0 1 auto;
  align-self: auto;
  @if $type==one {
    width: $c-1;
  }
  @if $type==two {
    width: $c-2;
  }
  @if $type==three {
    width: $c-3;
  }
  @if $type==four {
    width: $c-4;
  }
  @if $type==five {
    width: $c-5;
  }
  @if $type==six {
    width: $c-6;
  }
  @if $type==seven {
    width: $c-7;
  }
  @if $type==eight {
    width: $c-8;
  }
  @if $type==nine {
    width: $c-9;
  }
  @if $type==ten {
    width: $c-10;
  }
  @if $type==eleven {
    width: $c-11;
  }
  @if $type==twelve {
    width: $c-12;
  }
}

// layout mixin
@mixin layout($type: null) {
  @if $type==block {
    display: block;
  }
  @if $type==inline {
    display: inline-block;
  }
  @if $type==left {
    float: left;
  }
  @if $type==right {
    float: right;
  }
  @if $type==center {
    display: block;
    margin: 0 auto;
  }
  @if $type==clear {
    clear: both;
    display: block;
  }
}

// visibility mixin
@mixin visibility($type: null) {
  @if $type==hide {
    display: none;
  }
  @if $type==show {
    display: block;
  }
  @if $type==hidden {
    visibility: hidden;
  }
  @if $type==reveal {
    visibility: visible;
  }
}

// alignment mixin
@mixin visibility($type: null) {
  @if $type==top {
    vertical-align: top;
  }
  @if $type==middle {
    vertical-align: middle;
  }
  @if $type==bottom {
    vertical-align: bottom;
  }
}

// overflow mixin
@mixin visibility($type: null) {
  @if $type==overflow {
    overflow: auto;
  }
  @if $type==overflow-x {
    overflow-x: auto;
  }
  @if $type==overflow-y {
    overflow-y: auto;
  }
  @if $type==overflow-hidden {
    overflow: hidden;
  }
  @if $type==overflow-x-hidden {
    overflow-x: hidden;
  }
  @if $type==overflow-y-hidden {
    overflow-y: hidden;
  }
  @if $type==scroll {
    overflow: scroll;
  }
  @if $type==scroll-x {
    overflow-x: scroll;
  }
  @if $type==scroll-y {
    overflow-y: scroll;
  }
}

// background mixin
@mixin background($type: null, $value: null) {
  @if $type==color {
    background: $value;
  }

  @if $type==image {
    background: $value no-repeat;
  }
}

// border mixin 
@mixin border($type: null, $size: null, $style: null, $color: null) {
  @if $type==no-border {
    border: 0;
  }
  @if $type==border {
    border: $size $style $color;
  }
  @if $type==border-top {
    border: $size $style $color;
  }
  @if $type==border-bottom {
    border: $size $style $color;
  }
  @if $type==border-left {
    border: $size $style $color;
  }
  @if $type==border-right {
    border: $size $style $color;
  }
}

// radius mixin 
@mixin radius($type: null, $size: null) {
  @if $type==none {
    border-radius: 0;
  }
  @if $type==rounded {
    border-radius: $size;
  }

  @if $type==rounded-top {
    border-top-left-radius: $size;
    border-top-right-radius: $size;
  }

  @if $type==rounded-bottom {
    border-bottom-left-radius: $size;
    border-bottom-right-radius: $size;
  }

  @if $type==rounded-left {
    border-top-left-radius: $size;
    border-bottom-left-radius: $size;
  }

  @if $type==rounded-right {
    border-top-right-radius: $size;
    border-bottom-right-radius: $size;
  }

  @if $type==rounded-top-left {
    border-top-left-radius: $size;
  }

  @if $type==rounded-top-right {
    border-top-right-radius: $size;
  }

  @if $type==rounded-bottom-left {
    border-bottom-left-radius: $size;
  }

  @if $type==rounded-bottom-right {
    border-bottom-right-radius: $size;
  }
}

// shadows mixin
@mixin shadow($type: null, $horizontal: null, $vertical: null, $blur: null, $spread: null, $color: null, $opacity: null) {
  @if $type==inner {
    box-shadow: inset $horizontal $vertical $blur $spread rgba($color, $opacity);
  }

  @if $type==outer {
    box-shadow: $horizontal $vertical $blur $spread rgba($color, $opacity);
  }
}

// opacity mixin
@mixin opacity($color: null, $value: null) {
  background: $color;
  opacity: $value;
}